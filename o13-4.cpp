#include<stdio.h>
#include<iostream>
using namespace std;
/*
问题描述
　　我们把一个数称为有趣的，当且仅当：
　　1. 它的数字只包含0, 1, 2, 3，且这四个数字都出现过至少一次。
　　2. 所有的0都出现在所有的1之前，而所有的2都出现在所有的3之前。
　　3. 最高位数字不为0。
　　因此，符合我们定义的最小的有趣的数是2013。除此以外，4位的有趣的数还有两个：2031和2301。
　　请计算恰好有n位的有趣的数的个数。由于答案可能非常大，只需要输出答案除以1000000007的余数。
输入格式
　　输入只有一行，包括恰好一个正整数n (4 ≤ n ≤ 1000)。
输出格式
　　输出只有一行，包括恰好n 位的整数中有趣的数的个数除以1000000007的余数。
样例输入
4
样例输出
3
*/
/*
dp[i][j]表示填到第i位数时处于第j个状态。 
共有六种合法状态，括号表示重复出现的数字   
0--01(2)3
1--(0)1(2)3
2--01(2)(3)
3--(0)(1)(2)3
4--(0)1(2)(3)
5--(0)(1)(2)(3)
*/ 
 
int main(){
    int i,n;
	long long dp[1010][10];
	scanf("%d",&n);
    for (i=1;i<=n;i++){
        dp[i][0]=1;
        dp[i][1]=(dp[i-1][1]*2+dp[i-1][0])%1000000007;
        dp[i][2]=(dp[i-1][2]+dp[i-1][0])%1000000007;
        dp[i][3]=(dp[i-1][3]*2+dp[i-1][1])%1000000007;
        dp[i][4]=(dp[i-1][4]*2+dp[i-1][2]+dp[i-1][1])%1000000007;
        dp[i][5]=(dp[i-1][5]*2+dp[i-1][4]+dp[i-1][3])%1000000007;
        }
    cout << dp[n][5] <<endl;
    return 0;
}
